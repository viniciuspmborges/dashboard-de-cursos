name: Build and deploy a container to an Azure Container App

on:
  push:
    branches: [ "develop" ]
    paths-ignore:
      - 'README.md'
  pull_request:
    branches: [ "main" ]
    paths-ignore:
      - 'README.md'
  workflow_dispatch:

jobs:
  deploy-develop:
    if: github.ref == 'refs/heads/develop'
    runs-on: ubuntu-latest
    environment:
      name: 'Develop'
      
    steps:
    - uses: actions/checkout@v3

    - uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Debug Info
      run: |
        echo "Event Name: ${{ github.event_name }}"
        echo "Ref: ${{ github.ref }}"
        echo "Base Ref: ${{ github.base_ref }}"
  
    - name: Build and deploy Container App em Dev
      uses: azure/container-apps-deploy-action@v1
      with:
        imageToDeploy: tesouro.azurecr.io/tesouro/codip/${{ vars.PROJECT_NAME }}:${{ github.run_number }}
        appSourcePath: ${{ github.workspace }}
        acrName: ${{ vars.AZURE_REGISTRY_NAME }}
        location: brazilsouth
        ingress: external
        targetPort: 8501
        acrUsername: ${{ secrets.AZURE_REGISTRY_USERNAME }}
        acrPassword: ${{ secrets.AZURE_REGISTRY_PASSWORD }}
        resourceGroup: rg-container-apps
        containerAppEnvironment: env-containerapps-codip-desenv2
        containerAppName: ${{ vars.PROJECT_NAME }}-dev

  sonar-analysis:
    if: github.event_name == 'pull_request' && github.base_ref == 'main'
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Set Project Key
      id: set_project_key
      run: echo "::set-output name=project_key::$(echo ${{ github.repository }} | sed 's/[^a-zA-Z0-9._:-]/-/g')"        

    - name: SonarQube Server Scan
      uses: sonarsource/sonarqube-scan-action@master
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
      with:
        args: >
          -Dsonar.projectKey=${{ steps.set_project_key.outputs.project_key }}
          -Dsonar.projectName=${{ steps.set_project_key.outputs.project_key }}
          -Dsonar.projectVersion=${{ github.run_number }}
          -Dsonar.sources=.
          -Dsonar.host.url=${{ secrets.SONAR_HOST_URL }}
          -Dsonar.login=${{ secrets.SONAR_TOKEN }}

    - name: SonarQube Server Quality Gate check
      id: sonarqube-quality-gate-check
      uses: sonarsource/sonarqube-quality-gate-action@master
      with:
         pollingTimeoutSec: 600
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}     

  deploy-prod:
    if: github.event_name == 'pull_request' && github.base_ref == 'main'
    runs-on: ubuntu-latest
    environment:
      name: 'Production'
      
    steps:
    - uses: actions/checkout@v3

    - uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Debug Info
      run: |
        echo "Event Name: ${{ github.event_name }}"
        echo "Ref: ${{ github.ref }}"
        echo "Base Ref: ${{ github.base_ref }}"
  
    - name: Build and deploy Container App em Prod
      uses: azure/container-apps-deploy-action@v1
      with:
        imageToDeploy: tesouro.azurecr.io/tesouro/codip/${{ vars.PROJECT_NAME }}:${{ github.run_number }}
        appSourcePath: ${{ github.workspace }}
        acrName: ${{ vars.AZURE_REGISTRY_NAME }}
        location: brazilsouth
        ingress: external
        targetPort: 8501
        acrUsername: ${{ secrets.AZURE_REGISTRY_USERNAME }}
        acrPassword: ${{ secrets.AZURE_REGISTRY_PASSWORD }}
        resourceGroup: rg-container-apps
        containerAppEnvironment: env-containerapps-codip
        containerAppName: ${{ vars.PROJECT_NAME }}

 
